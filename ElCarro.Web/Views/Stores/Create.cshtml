@model ElCarro.Web.Models.StoreView

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

@Styles.Render("~/Content/map-store")

<div class="row">
    <h3 class="center">
        Crear Sucursal
        <a href="@Url.Action("Index", "Manage")" class="tooltipped" data-position="right"
           data-delay="50" data-tooltip="Volver"><i class="material-icons">undo</i></a>
    </h3>
    <hr>
</div>

@using (Html.BeginForm("Create", "Stores", FormMethod.Post, new { @class = "col s12", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col s12 m6">
                <div class="row">
                    <div class="file-field input-field">
                        <div class="btn">
                            <span>@Html.DisplayNameFor(model => model.Logo)</span>
                            @Html.TextBoxFor(model => model.Logo, new { type = "file" })
                            @Html.ValidationMessageFor(model => model.Logo, "", new { @class = "text-danger" })
                        </div>
                        <div class="file-path-wrapper">
                            <input class="file-path validate" type="text" placeholder="Cambiar imagen de perfil">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s12">
                        <i class="material-icons prefix">work</i>
                        @Html.TextBoxFor(m => m.Name, new { @class = "validate" })
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                        @Html.LabelFor(m => m.Name, "Nombre de la sucursal")
                    </div>
                </div>
            </div>
            <div class="col s12 m6">
                <div class="row">
                    <div class="input-field col s12">
                        <i class="material-icons prefix">phone</i>
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "validate" })
                        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                        @Html.LabelFor(m => m.PhoneNumber, "Teléfono")
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s12">
                        <i class="material-icons prefix">email</i>
                        @Html.TextBoxFor(m => m.Email, new { @class = "validate" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        @Html.LabelFor(m => m.Email, "Correo Electrónico")
                    </div>
                </div>
            </div>
        </div>

        <div class="row container">
            <h3>Ubicación del negocio.</h3>
            @Html.HiddenFor(m => m.lat_long.lat, new { id = "latitude" })
            @Html.HiddenFor(m => m.lat_long.lng, new { id = "longitude" })
            <div id="map-create"></div>
        </div>

        <div class="row">
            <div class="input-field col s12 center">
                <button class="btn waves-effect waves-light" type="submit" name="action">Guardar</button>
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/map-init")
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBr1uQbYB27-9TXYvVAjRYqPou1QkcTdgk&callback=initMap">
</script>
