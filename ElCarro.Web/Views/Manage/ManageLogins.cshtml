@model ElCarro.Web.Models.ManageLoginsViewModel
@using Microsoft.Owin.Security

@{
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

<div class="container">
    <div class="section">
        <h2>@ViewBag.Title.</h2>

        @if (null != ViewBag.StatusMessage && !string.IsNullOrWhiteSpace(ViewBag.StatusMessage))
        {
            <div class="row">
                <div class="col s12 text-success-cross-all">
                    <button type="button" class="close-msg" aria-label="Close">
                        <span aria-hidden="true" onclick="closeMsg('text-success-cross-all')">&times;</span>
                    </button>
                    <p>@ViewBag.StatusMessage</p>
                </div>
            </div>
        }
        @{
            var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
            if (loginProviders.Count() == 0)
            {
                <div>
                    <p>
                        No hay servicios de autenticación externos configurados. Ver <a href="http://go.microsoft.com/fwlink/?LinkId=313242">este artículo</a>
                        para conocer los detalles sobre cómo configurar esta aplicación ASP.NET para que soporte el inicio de sesión via servicios externos.
                    </p>
                </div>
            }
            else
            {
                <h4>Inicios de sesión registrados</h4>
                <table class="table">
                    <tbody>
                        @foreach (var account in Model.CurrentLogins)
                        {
                            <tr>
                                <td>@account.LoginProvider</td>
                                <td>
                                    @if (ViewBag.ShowRemoveButton)
                                    {
                                        using (Html.BeginForm("RemoveLogin", "Manage"))
                                        {
                                            @Html.AntiForgeryToken()
                                            <div>
                                                @Html.Hidden("loginProvider", account.LoginProvider)
                                                @Html.Hidden("providerKey", account.ProviderKey)
                                                <input type="submit" class="btn btn-default" value="Remove" title="Elimina este @account.LoginProvider de tu cuenta." />
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        @: &nbsp;
                                }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                using (Html.BeginForm("LinkLogin", "Manage"))
                {
                    @Html.AntiForgeryToken()
                    <div id="socialLoginList">
                        <p>
                            @foreach (AuthenticationDescription p in Model.OtherLogins)
                            {
                                <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Inicia sesión usando @p.Caption">@p.AuthenticationType</button>
                            }
                        </p>
                    </div>
                }
            }
        }
    </div>
</div>
